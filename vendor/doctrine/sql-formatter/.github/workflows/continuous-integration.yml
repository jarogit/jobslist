
name: "Continuous Integration"

on:
  pull_request:
    branches:
      - "*.x"
  push:
    branches:
      - "*.x"

env:
  fail-fast: true

jobs:

  unit-tests:
    name: "Unit tests"
    runs-on: "ubuntu-20.04"

    strategy:
      matrix:
        php-version:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"

    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          tools: "cs2pr"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "highest"

      - name: "Install phpunit with composer"
        run: "composer bin phpunit install --no-interaction --no-progress --no-suggest"

      - name: "Test fixes"
        run: "vendor/bin/phpunit --coverage-text"

  static-analysis-phpstan:
    name: "Static Analysis with PHPStan"
    runs-on: "ubuntu-20.04"

    strategy:
      matrix:
        php-version:
          - "7.4"

    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          extensions: "mbstring"
          tools: "cs2pr"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "highest"

      - name: "Install phpunit with composer"
        run: "composer bin phpunit install --no-interaction --no-progress --no-suggest"

      - name: "Install phpstan with composer"
        run: "composer bin phpstan install --no-interaction --no-progress --no-suggest"

      - name: "Run a static analysis with phpstan/phpstan"
        run: "vendor/bin/phpstan analyse --error-format=checkstyle | cs2pr"


  static-analysis-psalm:
    name: "Static Analysis with Psalm"
    runs-on: "ubuntu-20.04"

    strategy:
      matrix:
        php-version:
          - "7.4"

    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "highest"

      - name: "Install phpunit with composer"
        run: "composer bin phpunit install --no-interaction --no-progress --no-suggest"

      - name: "Install psalm with composer"
        run: "composer bin all install --no-interaction --no-progress --no-suggest"

      - name: "Run a static analysis with vimeo/psalm"
        run: "vendor/bin/psalm --show-info=false --stats --output-format=github --threads=4"

  coding-standards:
    name: "Coding Standards"
    runs-on: "ubuntu-20.04"

    strategy:
      matrix:
        php-version:
          - "7.4"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          tools: "cs2pr"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v1"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-locked-${{ hashFiles('composer.lock') }}-${{ hashFiles('vendor-bin/*/composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-locked-"

      - name: "Install dependencies with composer"
        run: "composer install --no-interaction --no-progress --no-suggest"

      - name: "Install phpcs with composer"
        run: "composer bin all install --no-interaction --no-progress --no-suggest"

      # Remove -q when updating to phpcs v4
      - name: "Run squizlabs/php_codesniffer"
        run: "vendor/bin/phpcs -q --no-colors --report=checkstyle | cs2pr"
